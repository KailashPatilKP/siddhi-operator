apiVersion: siddhi.io/v1alpha2
kind: SiddhiProcess
metadata: 
  name: power-surge-app
spec: 
  apps: 
    - script: |
        @App:name("PowerSurgeDetection")
        @App:description("App consumes events from HTTP as a JSON message of { 'deviceType': 'dryer', 'power': 6000 } format and inserts the events into DevicePowerStream, and alerts the user if the device type is dryer and power level is greater than or equal to 600W by sending an email in the log.")

        /*
          Input: deviceType string and powerConsuption int(Watt)
          Output: Alert user from sending an email, if there is a power surge in the dryer. In other words, notify when power is greater than or equal to 600W.
        */

        @source(
          type='http',
          receiver.url='${RECEIVER_URL}',
          basic.auth.enabled='${BASIC_AUTH_ENABLED}',
          @map(type='json')
        )
        define stream DevicePowerStream(deviceType string, power int);

        @sink(type='email',
              username ='send.alert.account',
              address ='send.alert.account@gmail.com',
              password= 'send.alert.account.password', 
              subject='Alert from Power Surge Detection - High Power Consumption {{power}}J from {{deviceType}} ',
              to='receive.alert.account1@gmail.com, receive.alert.account2@gmail.com',
              port = '465',
              host = 'smtp.gmail.com',
              ssl.enable = 'true',
              auth = 'true', 
              @map(type='text'))  
        define stream PowerSurgeAlertStream(deviceType string, power int); 

        @info(name='surge-detector')  
        from DevicePowerStream[deviceType == 'dryer' and power >= 600] 
        select deviceType, power  
        insert into PowerSurgeAlertStream;

  container: 
    env: 
      - 
        name: RECEIVER_URL
        value: "http://0.0.0.0:8080/checkPower"
      - 
        name: BASIC_AUTH_ENABLED
        value: "false"
    image: "siddhiio/siddhi-runner-alpine:5.1.2"
